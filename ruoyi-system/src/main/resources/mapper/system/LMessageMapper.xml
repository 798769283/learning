<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.LMessageMapper">
    
    <resultMap type="LMessage" id="LMessageResult">
        <result property="id"    column="id"    />
        <result property="fromId"    column="from_id"    />
        <result property="toId"    column="to_id"    />
        <result property="conversationId"    column="conversation_id"    />
        <result property="content"    column="content"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectLMessageVo">
        select id, from_id, to_id, conversation_id, content, status, create_time from l_message
    </sql>

    <select id="selectLMessageList" parameterType="LMessage" resultMap="LMessageResult">
        <include refid="selectLMessageVo"/>
        <where>  
            <if test="fromId != null  and fromId != ''"> and from_id = #{fromId}</if>
            <if test="toId != null  and toId != ''"> and to_id = #{toId}</if>
            <if test="conversationId != null  and conversationId != ''"> and conversation_id = #{conversationId}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <select id="selectMessageList" parameterType="String" resultMap="LMessageResult">
        <include refid="selectLMessageVo"/>
        where id in (
            select max(id) from l_message
            where status != 2
            and to_id = #{userId} or from_id =#{userId}
            group by conversation_id
        );
    </select>
    <select id="sumUnreadMessage" resultType="java.lang.Integer">
        select count(id) from l_message
        where status=0
        and from_id!=#{userID}
        and to_id=#{userID}
        and conversation_id=#{conversationId}
        group by conversation_id;
    </select>

    <select id="totalMessage" resultType="java.lang.Integer" parameterType="String">
        select count(id) from l_message
        where status!=2
        and conversation_id=#{conversationId}
    </select>
    <select id="selectLMessageById" parameterType="Long" resultMap="LMessageResult">
        <include refid="selectLMessageVo"/>
        where id = #{id}
    </select>

    <select id="selectMessageByConversationIdList" resultMap="LMessageResult" parameterType="String">
        <include refid="selectLMessageVo"/>
        where status!=2
        and conversation_id = #{conversationId}
    </select>

    <select id="totalUnreadMessage" resultType="java.lang.Integer" parameterType="String">
        select count(id) from l_message
        where status =0
        and to_id = #{userId}
    </select>
    <insert id="insertLMessage" parameterType="LMessage" useGeneratedKeys="true" keyProperty="id">
        insert into l_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fromId != null  and fromId != ''">from_id,</if>
            <if test="toId != null  and toId != ''">to_id,</if>
            <if test="conversationId != null  and conversationId != ''">conversation_id,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="status != null ">status,</if>
            <if test="createTime != null ">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fromId != null  and fromId != ''">#{fromId},</if>
            <if test="toId != null  and toId != ''">#{toId},</if>
            <if test="conversationId != null  and conversationId != ''">#{conversationId},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="status != null ">#{status},</if>
            <if test="createTime != null ">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateLMessage" parameterType="LMessage">
        update l_message
        <trim prefix="SET" suffixOverrides=",">
            <if test="fromId != null  and fromId != ''">from_id = #{fromId},</if>
            <if test="toId != null  and toId != ''">to_id = #{toId},</if>
            <if test="conversationId != null  and conversationId != ''">conversation_id = #{conversationId},</if>
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateMeesageStatus">
        update l_message
        set status = #{status}
        where to_id = #{userId}
        and conversation_id = #{conversationId}
    </update>
    <delete id="deleteLMessageById" parameterType="Long">
        delete from l_message where id = #{id}
    </delete>

    <delete id="deleteLMessageByIds" parameterType="String">
        delete from l_message where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>